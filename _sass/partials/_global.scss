// Loader
$dot-color: #79C3CD;
$dot-size: 35px;
$circle-size: 70px;
$animation-time: 4s;

$color-yellow: #FBD301;
$color-red: #FF3270;
$color-blue: #208BF1;
$color-green: #AFE102;

$colors: ($color-red, $color-blue, $color-green, $color-yellow);

@include web-fonts(($fixed-font-family:($light, $regular, $bold)));
body, html {
    font-family: $fixed-font-family, $base-font-family;
    font-size: $base-font-size;
    font-weight: $regular;
    width: 100%;
    height: 100%;
    background: $base-background-color;
    text-shadow: 1px 1px 1px rgba(0, 0, 0, .004);
    text-rendering: optimizeLegibility !important;
    -webkit-font-smoothing: antialiased !important;
    -moz-osx-font-smoothing: grayscale !important;
}
section {
    position: relative;
    overflow: hidden;
    min-height: $min-section-height;
    padding-top: $section-padding-top;
    padding-bottom: $section-padding-bottom;
    text-align: center;
    @media (max-width: 767px) {
        padding-top: $small-section-padding-top;
        padding-bottom: $small-section-padding-bottom;
    }
    h3 {
        margin-bottom: 50px;
        @media (max-width: 767px) {
            padding-bottom: 30px;
        }
    }
}
p {
    font-size: 15px;
    font-weight: 300;
    line-height: $base-line-height;
}
i {
    font-style: normal;
}
b, strong {
    font-weight: $bold;
}
a {
    @include linkColor($link-color);
    &:hover, &:active, &:focus {
        text-decoration: none;
    }
}
#{headings()} {
    font-weight: $light;
    display: block;
}
h1 {
    font-size: $h1-font-size;
    @media (max-width: 767px) {
        font-size: $h1-font-size * 60 / 100;
    }
}
h2 {
    font-size: $h2-font-size;
    @media (max-width: 767px) {
        font-size: $h2-font-size * 60 / 100;
    }
}
h3 {
    font-size: $h3-font-size;
    @media (max-width: 767px) {
        font-size: $h3-font-size * 70 / 100;
    }
}
h4 {
    font-size: $h4-font-size;
    @media (max-width: 767px) {
        font-size: $h4-font-size * 70 / 100;
    }
}
h5 {
    font-size: $h5-font-size;
    @media (max-width: 767px) {
        font-size: $h5-font-size * 80 / 100;
    }
}
h6 {
    font-size: $h6-font-size;
    @media (max-width: 767px) {
        font-size: $h6-font-size * 80 / 100;
    }
}
time {
    display: block;
}
.st-content, .st-container, .st-pusher {
    height: 100%;
}
.st-content, .st-container, .st-content-inner {
    position: relative;
}
.st-pusher {
    position: relative;
    z-index: 99;
    left: 0;
    transition: $long-transition;
    &::after {
        position: fixed;
        top: 0;
        right: 0;
        width: 0;
        height: 0;
        content: '';
        transition: opacity .5s, width .1s .5s, height .1s .5s;
        opacity: 0;
        background: rgba(0, 0, 0, .2);
    }
    .st-menu-open &::after {
        z-index: 100;
        width: 100%;
        height: 100%;
        transition: opacity .5s;
        opacity: 1;
    }
}
.preloader {
    position: fixed;
    z-index: 9999;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: #fff;
}

// Loader
.dots {
	width: 0;
	height: 0;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	margin: auto;
	outline: 1px solid red;

	filter: url(#goo);
}

.dot {
	width: 0;
	height: 0;
	position: absolute;
	left: 0;
	top: 0;

	&:before {
		content: '';
		width: $dot-size;
		height: $dot-size;
		border-radius: 50px;
		background: $color-yellow;
		position: absolute;
		left: 50%;
		transform: translateY(0);
		margin-left: -($dot-size/2);
		margin-top: -($dot-size/2);
	}


	@keyframes dot-move {
		0% {
			transform: translateY(0);
		}

		18%, 22% {
			transform: translateY(-($circle-size));
		}

		40%, 100% {
			transform: translateY(0);
		}
	}

	@keyframes dot-colors {
		@for $i from 0 to 4 {
			#{$i*25%} {
				background-color: nth($colors, ($i+3)%4+1);
			}
		}

		100% {
			background-color: nth($colors, 4);
		}
	}

	&:nth-child(5):before {
		z-index: 100;
		width: $dot-size * 1.3;
		height: $dot-size * 1.3;
		margin-left: -($dot-size * .65);
		margin-top: -($dot-size * .65);
		animation: dot-colors $animation-time ease infinite;
	}

	@for $i from 0 to 4 {
		@keyframes dot-rotate-#{$i + 1} {
			0% {
				transform: rotate(#{($i+1)*270deg - 375deg});
			}

			100% {
				transform: rotate(#{($i+1)*270deg + 0deg});
			}
		}

		&:nth-child(#{$i + 1}) {
			animation: dot-rotate-#{$i + 1} $animation-time #{$i * $animation-time / 4} linear infinite;

			&:before {
				background-color: nth($colors, $i+1);
				animation: dot-move $animation-time #{$i * $animation-time/4} ease infinite;
			}
		}
	}
}

.social-links {
    li {
        margin-right: 4px;
        display: inline-block;
    }
}
